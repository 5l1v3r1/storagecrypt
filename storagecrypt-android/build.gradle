/*
 *  Copyright Pierre Sagne (12 december 2014)
 *
 * petrus.dev.fr@gmail.com
 *
 * This software is a computer program whose purpose is to encrypt and
 * synchronize files on the cloud.
 *
 * This software is governed by the CeCILL license under French law and
 * abiding by the rules of distribution of free software.  You can  use,
 * modify and/ or redistribute the software under the terms of the CeCILL
 * license as circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 *
 * As a counterpart to the access to the source code and  rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty  and the software's author,  the holder of the
 * economic rights,  and the successive licensors  have only  limited
 * liability.
 *
 * In this respect, the user's attention is drawn to the risks associated
 * with loading,  using,  modifying and/or developing or reproducing the
 * software by the user in light of its specific status of free software,
 * that may mean  that it is complicated to manipulate,  and  that  also
 * therefore means  that it is reserved for developers  and  experienced
 * professionals having in-depth computer knowledge. Users are therefore
 * encouraged to load and test the software's suitability as regards their
 * requirements in conditions enabling the security of their systems and/or
 * data to be ensured and,  more generally, to use and operate it in the
 * same conditions as regards security.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 *
 */

apply plugin: 'com.android.application'

def filePickerVersion = "0.12.3"
def spongyCastleVersion = "1.58.0.0"
def eventBusVersion = "3.0.0"
def ormLiteVersion = "5.0"
def slf4jVersion = "1.7.25"
def androidTreeViewVersion = "1.2.9"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "fr.petrus.tools.storagecrypt"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
    }
    buildTypes {
        release {
            //useProguard false
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            //useProguard false
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        // needed for retrofit
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "com.madgag.spongycastle:prov:${spongyCastleVersion}"
//    testCompile "com.madgag.spongycastle:pkix:${spongyCastleVersion}"
//    testCompile "com.madgag.spongycastle:pg:${spongyCastleVersion}"
    testCompile "com.madgag.spongycastle:core:${spongyCastleVersion}"

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(":core")
    compile "fr.petrus.tools:filepicker:${filePickerVersion}@aar"
    compile "com.madgag.spongycastle:prov:${spongyCastleVersion}"
//    compile "com.madgag.spongycastle:pkix:${spongyCastleVersion}"
//    compile "com.madgag.spongycastle:pg:${spongyCastleVersion}"
    compile "com.madgag.spongycastle:core:${spongyCastleVersion}"
    compile "org.greenrobot:eventbus:${eventBusVersion}"
    compile "com.j256.ormlite:ormlite-android:${ormLiteVersion}"
    compile "org.slf4j:slf4j-android:${slf4jVersion}"
    compile "com.github.bmelnychuk:atv:${androidTreeViewVersion}"
}
